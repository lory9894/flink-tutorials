monitorInterval=30

# This affects logging for both user code and Flink
rootLogger.level = INFO
rootLogger.appenderRef.console.ref = ConsoleAppender
rootLogger.appenderRef.rolling.ref = RollingFileAppender

logger.performanceLogger.name = performanceLogger
logger.performanceLogger.level = INFO
logger.performanceLogger.appenderRef.performance.ref = performanceAppender
#in questo modo i log di performance non vengono mandati al root logger (che li stamperebbe anche sulla console)
logger.performanceLogger.additivity=false
#ovviamente non funziona perchè flink utilizza una sintassi che non riesco a capire

#log performance data
appender.performance.name = performanceAppender
appender.performance.type = RollingFile
appender.performance.append=true
appender.performance.fileName=log/performance.log
appender.performance.filePattern = performance.%i
appender.performance.layout.type = PatternLayout
appender.performance.layout.pattern = %d{dd/MM/yyyy HH:mm:ss.SSS} %5p [%-10c] %m%n
appender.performance.policies.type = Policies
appender.performance.policies.size.type = SizeBasedTriggeringPolicy
appender.performance.policies.size.size=100MB
appender.performance.policies.startup.type = OnStartupTriggeringPolicy
appender.performance.strategy.type = DefaultRolloverStrategy
appender.performance.strategy.max = ${env:MAX_LOG_FILE_NUMBER:-10}

# The following lines keep the log level of common libraries/connectors on
# log level INFO. The root logger does not override this. You have to manually
# change the log levels here.
logger.akka.name = akka
logger.akka.level = INFO
logger.kafka.name= org.apache.kafka
logger.kafka.level = INFO
logger.hadoop.name = org.apache.hadoop
logger.hadoop.level = INFO
logger.zookeeper.name = org.apache.zookeeper
logger.zookeeper.level = INFO
logger.shaded_zookeeper.name = org.apache.flink.shaded.zookeeper3
logger.shaded_zookeeper.level = INFO

# Log all infos to the console
appender.console.name = ConsoleAppender
appender.console.type = CONSOLE
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss,SSS} %-5p %-60c %x - %m%n

# Log all infos in the given rolling file
appender.rolling.name = RollingFileAppender
appender.rolling.type = RollingFile
appender.rolling.append = true
appender.rolling.fileName = ${sys:log.file}
appender.rolling.filePattern = ${sys:log.file}.%i
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss,SSS} %-5p %-60c %x - %m%n
appender.rolling.policies.type = Policies
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size=100MB
appender.rolling.policies.startup.type = OnStartupTriggeringPolicy
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.max = ${env:MAX_LOG_FILE_NUMBER:-10}

# Suppress the irrelevant (wrong) warnings from the Netty channel handler
logger.netty.name = org.jboss.netty.channel.DefaultChannelPipeline
logger.netty.level = OFF